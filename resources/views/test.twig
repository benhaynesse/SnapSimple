{% extends 'templates/app.twig' %} {# Override For App.twig #} {% block content %} {# Title Display #}


<link rel="stylesheet" href="{{ base_url() }}/css/dep/croppie.css">

<script src="{{ base_url() }}/js/dep/croppie.js"></script>



<form action={{ path_for( 'test') }} method="POST" enctype="multipart/form-data">

    <input type="hidden" id="x1" name="x1"/>
    <input type="hidden" id="y1" name="y1"/>
    <input type="hidden" id="w" name="w"/>
    <input type="hidden" id="h" name="h"/>

    
    <div class="img-container col-xs-12">
         <div id="upload-demo"></div>
         <strong>Select Image:</strong>
         <input class="form-control" type="file" id="upload" name="image">     
    </div>
        
    <input class="form-control btn btn-danger" type="submit" value="Upload" name="upload">
    

</form>


<script>

    //Initialise Croppise. Dont show zoom bar set bounday and viewport.
    $uploadCrop = $('#upload-demo').croppie({

        enableExif: true,
        enableOrientation: true,
        showZoomer: true,
       

        viewport: {
            width: 200,
            height: 200,
        },
        boundary: {
            width: 100,
            height: 300
        }

    });

    //Upload Button Clicked.
    $('#check').click(function(){
        let c = $uploadCrop.croppie('get');
        console.log(c)
    })

    //On Change of the view of the image. Update hidden values on form.
    $uploadCrop.on('update', function(data){
        let c = $uploadCrop.croppie('get').points; 
        console.log(c);    
        let dimensions = `{"x":${c[0]}, "y":${c[1]}, "w":${c[2]-c[0]}, "h":${c[3]-c[1]}}`;
        $('#dim').val(dimensions);

    });  

    //On Image Change
    $('#upload').on('change', function () {

        var reader = new FileReader();

        reader.onload = function (e) {
          
            
            //Add the image to croppie container when the user chooses one.
            $uploadCrop.croppie('bind', {
                url: e.target.result, 
            });

             
            
        }
        reader.readAsDataURL(this.files[0]);

    });

</script> {% endblock %}